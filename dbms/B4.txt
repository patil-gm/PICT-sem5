package mongocon;
//patil-gm
import com.mongodb.MongoException;
import com.mongodb.client.*;
import org.bson.Document;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;

public class MenuDrivenMongo {
	

    public static void main(String[] args) {
    	Logger.getLogger("org.mongodb.driver").setLevel(Level.WARNING);
       

        Scanner scanner = new Scanner(System.in);
        int choice;
        
        try {
            MongoClient mongo = MongoClients.create("mongodb://localhost:27017");
            MongoDatabase db = mongo.getDatabase("gmp1");
            MongoCollection collection = db.getCollection("myfirst");
            
            do{
    			System.out.println("1. Insert Records");
    			System.out.println("2. Update Records");
    			System.out.println("3. Delete Records");
    			System.out.println("4. Display All Records");
    			System.out.println("5. Exit");
                System.out.println("Enter your choice: ");
                
                choice = scanner.nextInt();

                switch (choice){
                    case 1:
                    	insert(scanner,collection);
                        break;
                    case 2:
                    	update(scanner,collection);
                        break;
                    case 3:
                    	delete(scanner,collection);
                        break;
                    case 4:
                    	display(collection);
                        break;
                    case 5:
                        System.exit(0);
                        break;
                }
                
                
            } while(choice != 5);
        } catch ( MongoException e) {
            e.printStackTrace();
        }
    }
    
    
    
    public static void insert(Scanner scanner,MongoCollection collection) {
    	 String  value,roll,name,dept,cgpa,placedin;
    	 Document document = new Document();

         System.out.println("Enter rollno: ");
         scanner.nextLine();
         roll = scanner.nextLine();
         document.put("rollno", roll);
         System.out.println("Enter name: ");
         name = scanner.nextLine();
         document.put("name", name);

         System.out.println("Enter department: ");
         dept = scanner.nextLine();
         document.put("department", dept);

         System.out.println("Enter CGPA: ");
         cgpa = scanner.nextLine();
         document.put("cgpa", cgpa);

         System.out.println("Enter Company where placed: ");
         placedin = scanner.nextLine();
         document.put("placedin", placedin);

         collection.insertOne(document);
    }
    
    public static void update(Scanner scanner,MongoCollection collection) {
    	 String  value,roll,name,dept,cgpa,placedin;
    	 Document searchObj = new Document();
         System.out.println("Enter roll no. of entry which you wish to update: ");
         value = scanner.next();
         searchObj.put("rollno", value);
         Document newObj = new Document();

         newObj.put("rollno", value);

         System.out.println("Enter name: ");
         scanner.nextLine();
         name = scanner.nextLine();
         newObj.put("name", name);

         System.out.println("Enter department: ");
         dept = scanner.nextLine();
         newObj.put("department", dept);

         System.out.println("Enter CGPA: ");
         cgpa = scanner.nextLine();
         newObj.put("cgpa", cgpa);

         System.out.println("Enter Company where placed: ");
         placedin = scanner.nextLine();
         newObj.put("placedin", placedin);


         collection.replaceOne(searchObj, newObj);
    }
    
    public static void delete(Scanner scanner,MongoCollection collection) {
    	String value;
    	 System.out.println("Enter the rollno. of the entry you wish to delete: ");
         value = scanner.next();
         Document removableObj = new Document();
         removableObj.put("rollno", value);
         collection.deleteOne(removableObj);
    }
    
    public static void display(MongoCollection collection) {
    	 MongoCursor<Document> cursorDoc = collection.find().cursor();
         if(!cursorDoc.hasNext())
         {
             System.out.println("\t** Empty Database!! **\n");
         }
         while (cursorDoc.hasNext()) {
             System.out.println(cursorDoc.next());
         }
    }
}
